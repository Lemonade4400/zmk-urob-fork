/*                KEY POSITIONS

  ╭─────────────────────╮ ╭─────────────────────╮
  │ LT4 LT3 LT2 LT1 LT0 │ │ RT0 RT1 RT2 RT3 RT4 │
  │ LM4 LM3 LM2 LM1 LM0 │ │ RM0 RM1 RM2 RM3 RM4 │
  │ LB4 LB3 LB2 LB1 LB0 │ │ RB0 RB1 RB2 RB3 RB4 │
  ╰───────╮ LH2 LH1 LH0 │ │ RH0 RH1 RH2 ╭───────╯
          ╰─────────────╯ ╰─────────────╯ */

#define COMBO_TERM_FAST 18
#define COMBO_TERM_SLOW 30
#define COMBO_IDLE_FAST 150
#define COMBO_IDLE_SLOW 50

/* 

      LEFT HAND

*/

/* Horizontal combos */
// ZMK_COMBO(ret,   &kp RETURN,   LT1 LT0,     DEF NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)
// ZMK_COMBO(esc,   &kp ESC,      LT2 LT1,     DEF NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(caret, &kp CARET,    LT2 LT1,     DEF NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(prcnt, &kp PRCNT,    LT3 LT2,     DEF NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(mouseb,&smart_mouse, LH1 LH0,     DEF NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)


// Combos overlapping HRMs are set up as hold-taps themselves to allow for instantaneous
// chording of mods. Custom hold-tap instances can be bootstrapped on the go using the
// 8-argument version of ZMK_COMBO defined in base.keymap.
ZMK_COMBO(esc,   &hml LS(LALT)ESC, LM3 LM2, DEF NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(ret,   &hml LS(LALT)RETURN, LM2 LM1, DEF NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)
// ZMK_COMBO(ldrsh, &leader_sft,  LM3 LM2 LM1, DEF NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST, LS(LC(LALT)), KEYS_R)

// ZMK_COMBO(at,    &kp AT,       LT4 LT3,     DEF NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)
// ZMK_COMBO(cut,   &kp LC(X),    LT3 LT1,     DEF NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)
// ZMK_COMBO(dllr,  &kp DLLR,     LT3 LT2,     DEF NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST) 

/* Vertical combos */
ZMK_COMBO(cut,   &kp LC(X),    LT4 LM4,     DEF NAV NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(undo,  &kp LC(Z),    LT3 LM3,     DEF NAV NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(paste, &kp LS(INS),  LT2 LM2,     DEF NAV NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(copy,  &copy_cut,    LT1 LM1,     DEF NAV NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(lt_gt, &less_greater,LT0 LM0,     DEF NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)

ZMK_COMBO(grave, &kp GRAVE,    LM4 LB4,     DEF NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(amps,  &kp AMPS,     LM3 LB3,     DEF NAV NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(excl,  &kp EXCL,     LM2 LB2,     DEF NAV NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(code,  &mo CODE,     LM1 LB1,     DEF NAV NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(mouse, &smart_mouse, LM0 LB0,     DEF NAV NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)


/* 

      RIGHT HAND

*/

/* Horizontal combos */
ZMK_COMBO(space,  &kp SPACE,   RT1 RT2,     DEF NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(tab,    &kp TAB,     RT2 RT3,     DEF NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(swap,   &swapper,    RM1 RM2,     DEF     NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST, RS(LCTRL),    KEYS_L)
ZMK_COMBO(cswap,  &c_swapper,  RM2 RM3,     DEF     NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST, RS(LALT),     KEYS_L)
// ZMK_COMBO(lt,    &kp LT,       RM1 RM2,         NAV    , COMBO_TERM_FAST, COMBO_IDLE_FAST)
// ZMK_COMBO(gt,    &kp GT,       RM2 RM3,         NAV    , COMBO_TERM_FAST, COMBO_IDLE_FAST)

// ZMK_COMBO(lbkt,  &kp LBKT,     RB1 RB2,     DEF     NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)
// ZMK_COMBO(rbkt,  &kp RBKT,     RB2 RB3,     DEF     NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)
// ZMK_COMBO(lbrc,  &kp LBRC,     RB1 RB2,         NAV    , COMBO_TERM_FAST, COMBO_IDLE_FAST)
// ZMK_COMBO(rbrc,  &kp RBRC,     RB2 RB3,         NAV    , COMBO_TERM_FAST, COMBO_IDLE_FAST)

/* Vertical combos */
ZMK_COMBO(dollar,&kp DOLLAR,   RT0 RM0,     DEF     NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(slash, &kp SLASH,    RT1 RM1,     DEF     NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(plus,  &kp PLUS,     RT2 RM2,     DEF     NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(star,  &kp ASTERISK, RT3 RM3,     DEF     NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(hash,  &kp HASH,     RT4 RM4,     DEF     NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)

ZMK_COMBO(at,    &kp AT,       RM0 RB0,     DEF     NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(eq,    &kp EQUAL,    RM1 RB1,     DEF     NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(qst,   &kp QMARK,    RM2 RB2,     DEF     NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(pipe,  &kp PIPE,     RM3 RB3,     DEF     NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(tilde, &kp TILDE,    RM4 RB4,     DEF     NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)

// ZMK_COMBO(4up,   &four_up,     RM0 RB0,         NAV    , COMBO_TERM_SLOW, COMBO_IDLE_SLOW) // free
ZMK_COMBO(4up,   &four_up,     RT1 RM1,         NAV    , COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(3up,   &triple_up,   RT2 RM2,         NAV    , COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(2up,   &double_up,   RT3 RM3,         NAV    , COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(4down, &four_down,   RM1 RB1,         NAV    , COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(3down, &triple_down, RM2 RB2,         NAV    , COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(2down, &double_down, RM3 RB3,         NAV    , COMBO_TERM_SLOW, COMBO_IDLE_SLOW)

/*
      BOTH HANDS
*/

/* Horizontal combos both hands */
ZMK_COMBO(clock, &kp CAPSLOCK, LT2 RT2,     DEF NAV NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(uacc,  &u_accent,    LM0 RT1,     DEF NAV NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(iacc,  &i_accent,    LM0 RT2,     DEF NAV NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW) // don't work
ZMK_COMBO(oacc,  &o_accent,    LM0 RT3,     DEF NAV NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)

